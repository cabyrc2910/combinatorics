# Даны значения величины заработной платы заемщиков банка (zp) и значения их поведенческого кредитного скоринга (ks): 
# zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110], ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832]. 
# Используя математические операции, посчитать коэффициенты линейной регрессии, приняв за X заработную плату (то есть, zp - признак), 
# а за y - значения скорингового балла (то есть, ks - целевая переменная). Произвести расчет как с использованием intercept, так и без.

import numpy as np
import matplotlib.pyplot as plt

zp = np.array([35, 45, 190, 200, 40, 70, 54, 150, 120, 110])       # заработная платa
ks = np.array([401, 574, 874, 919, 459, 739, 653, 902, 746, 832])  # целевая переменная

plt.scatter(zp,ks)
plt.xlabel('Величина заработной платы')
plt.ylabel('Поведенческий кредитный скоринг', rotation=90)
plt.show()  # По графику предполагаем о наличии линейной взаимосвязи.

n = ks.size
b1= (np.mean(zp * ks) - np.mean(zp) * np.mean(ks)) / (np.mean(zp**2) - np.mean(zp) ** 2)
print(f'Коэффициент b (значение перед признаком) = {b1}')   # 2.620538882402765  
b0  = np.mean(ks)-b1*np.mean(zp)
print(f'Коэффициент a (intercept) = {b0}')   # 444.1773573243596
 
plt.scatter(zp,ks)
plt.plot(zp, b0+b1*zp, c='r')
plt.xlabel('Величина заработной платы')
plt.ylabel('Поведенческий кредитный скоринг', rotation=90)
plt.show() # График показывает линейную взаимосвязь между величиной заработной платы, и кредитного скоринга.

y_pred = b0 + b1 * zp
print(f'Прогназируемое значение y = {y_pred}')
# [535.89621821 562.10160703 942.07974498 968.2851338  548.99891262 627.61507909 585.68645697 837.25818968 758.64202321 732.43663439]

mse = np.sum((ks - y_pred)**2) / n
print(f'Функция потерь mse = {mse}')  #  6470.414201176658

zp1 = zp.reshape(1, n)
ks1 = ks.reshape(1, n)

b = np.dot(np.dot(np.linalg.inv(np.dot(zp1, zp1.T)), zp1), ks1.T)
print(f'Матричный метод расчета коэффициента b = {b}')  #[[5.88982042]]

y_pred1 = b * zp
print(f'Прогназируемое значение y (без intercept) = {y_pred1}')
# [[206.1437147   265.04191891 1119.06587983 1177.96408403  235.59281681 412.28742941  318.05030269  883.47306302  706.77845042  647.88024621]]