# –ú–∞—Ç—Ä–∏—á–Ω—ã–π –º–µ—Ç–æ–¥ —Ä–∞—Å—á–µ—Ç–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ –ª–∏–Ω–µ–π–Ω–æ–π —Ä–µ–≥—Ä–µ—Å—Å–∏–∏
    #  ùë¶ = b0+b1x
    #  Y = X * B
    # (y_1  y_2  y_3  ) = (1 x_1  1 x_2  1 x_3  ) (Œ≤_0  Œ≤_1  )
    #  B = (X**T*X)**-1*X**T*Y

import numpy as np
import scipy.stats as stats

s = np.array([27, 37, 42, 48, 57, 56, 77, 80])
p = np.array([1.2, 1.6, 1.8, 1.8, 2.5, 2.6, 3, 3.3])
x = s.reshape((8,1))
print(x)    # [[27]
            #  [37]
            #  [42]
            #  [48]
            #  [57]
            #  [56]
            #  [77]
            #  [80]]
y = p.reshape((8,1))
print(y)    # [[1.2]
            #  [1.6]
            #  [1.8]
            #  [1.8]
            #  [2.5]
            #  [2.6]
            #  [3. ]
            #  [3.3]]
X = np.hstack([np.ones((8,1)),x])  
# hstack - —Å–æ–µ–¥–∏–Ω—è–µ–º –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏ (–¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü 1 –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏)
# np.ones - —Å—â–∑–¥–∞—ë–º 8 –µ–¥–∏–Ω–∏—Ü (1)
print(X)    # [[ 1. 27.]
            # [ 1. 37.]
            # [ 1. 42.]
            # [ 1. 48.]
            # [ 1. 57.]
            # [ 1. 56.]
            # [ 1. 77.]
            # [ 1. 80.]]
B = np.dot(np.linalg.inv(np.dot(X.T,X)), X.T @ y)
# dot - –ø–µ—Ä–µ–º–Ω–æ–∂–µ–Ω–∏–µ –º–∞—Ç—Ä–∏—Ü –∏ –≤–µ–∫—Ç–æ—Ä–æ–≤
# inv - –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ–π –º–∞—Ç—Ä–∏—Ü—ã —ç—Ç–æ–≥–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
# X.T @ y - –¥–æ–º–Ω–æ–∂–µ–Ω–∏–µ –Ω–∞ —Ç—Ä–∞–Ω—Å–ø–æ–Ω–∏—Ä—É—é–º—É—é –º–∞—Ç—Ä–∏—Ü—É X –∏ y
print(B) # [[0.1714701 ]
         #  [0.03874585]]






